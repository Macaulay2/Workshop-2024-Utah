loadPackage ("NumberFields", Reload=>true)

-- Tests simpleExt

R1 = QQ[x,z]/(x^2+1,z^2-2)
use R1
f1 = x
minimalPolynomial f1
NF1 = numberField R1
ring NF1
SE1 = simpleExt NF1
ring SE1

R1 = QQ[x,y,z]/(x^2+1,y^2-2,z^3-2)
NF1 = numberField R1
ring NF1
degree NF1
gens NF1
SE1 = simpleExt NF1
ring SE1

-- Tests splittingField

polynomialSplits = f1 -> (
    L1 = decompose ideal f1;
    splits = true;
    for i from 0 to #L1-1 do (
        currentEntry := (entries gens L1#i)#0;
        if not (length(currentEntry)==1 and max(degree(currentEntry#0))==1) then (splits = false; break;)
    );
    splits
)

R1 = QQ[x]
f1 = x^3-2
L1 = decompose ideal f1 -- Doesn't split completely since not all ideals are generated by a degree one polynomial
polynomialSplits f1 -- Confirmation
S1 = target splittingField f1 -- Create the splitting field
f11 = (map((ring S1)[y], R1, {y})) f1
L2 = decompose ideal f11
polynomialSplits f11

ring S1